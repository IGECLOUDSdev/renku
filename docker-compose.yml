# -*- coding: utf-8 -*-
#
# Copyright 2017 - Swiss Data Science Center (SDSC)
# A partnership between École Polytechnique Fédérale de Lausanne (EPFL) and
# Eidgenössische Technische Hochschule Zürich (ETHZ).
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: '3'
volumes:
  db-data: {}
  cassandra-data: {}
services:
  db:
    image: postgres:9.6
    environment:
      PGDATA: /pgdata
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    volumes:
      - ./services/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
      - db-data:/pgdata
    ports:
      - 5432

  keycloak:
    build: ./services/keycloak
    environment:
      KEYCLOAK_MIGRATION_FILE: /data/renga-realm.json
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_USER: admin
      POSTGRES_DATABASE: keycloak
      POSTGRES_PASSWORD: keycloak
      POSTGRES_PORT_5432_TCP_ADDR: postgres
      POSTGRES_USER: keycloak
      RENGA_ENDPOINT: ${RENGA_ENDPOINT}
    ports:
      - 8080
    command:
      - "-b 0.0.0.0"
      - "-Dkeycloak.migration.action=import"
      - "-Dkeycloak.migration.provider=singleFile"
      - "-Dkeycloak.migration.file=/data/renga-realm.json"
      - "-Dkeycloak.migration.strategy=IGNORE_EXISTING"
    links:
      - db:postgres
    restart: on-failure
    labels:
      traefik.enable: "true"
      traefik.frontend.rule: PathPrefix:/auth

  gitlab:
    image: gitlab/gitlab-ce:latest
    restart: always
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url '${GITLAB_URL}'
        # gitlab_rails['db_username'] = "gitlab"
        # gitlab_rails['db_password'] = "gitlab"
        # gitlab_rails['db_host'] = "postgresql"
        # gitlab_rails['db_port'] = "5432"
        # gitlab_rails['db_database'] = "gitlabhq_production"
        # gitlab_rails['db_adapter'] = 'postgresql'
        # gitlab_rails['db_encoding'] = 'utf8'
        gitlab_rails['gitlab_shell_ssh_port'] = 5022
        gitlab_rails['lfs_enabled'] = true
        gitlab_rails['lfs_storage_path'] = '/var/storage/lfs-objects'
        gitlab_rails['initial_root_password'] = 'root_password'
        # Add any other gitlab.rb configuration here, each on its own line
    ports:
      - '5080:5080'
      - '5443:443'
      - '5022:22'
    volumes:
      - ./services/gitlab/config:/etc/gitlab
      - ./services/gitlab/logs:/var/log/gitlab
      - ./services/gitlab/git-data:/var/opt/gitlab
      - ./services/gitlab/lfs-data:/var/storage/lfs-objects
    links:
      - db:postgres
    networks:
      - default

  gitlab-runner:
    image: ${DOCKER_PREFIX}gitlab-runner:${PLATFORM_VERSION}
    environment:
      RENGA_RUNNER_IMAGE: ${DOCKER_PREFIX}minimal-notebook:${PLATFORM_VERSION}
      RENGA_REVIEW_DOMAIN: ${PLATFORM_DOMAIN}:8080
    restart: always
    volumes:
      - ./services/gitlab/runner:/etc/gitlab-runner
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - default

#   storage:
#     image: ${DOCKER_REPOSITORY}renga-storage:$PLATFORM_VERSION
#     environment:
#       AUTHORIZATION_CLIENT_SECRET: $AUTHORIZATION_CLIENT_SECRET
#       PLAY_APPLICATION_SECRET: $PLAY_APPLICATION_SECRET
#       RENGA_SERVICES_AUTHORIZATION_URL: ${RENGA_ENDPOINT}/auth/realms/Renga/protocol/openid-connect/auth
#       RESOURCE_MANAGER_PUBLIC_KEY: $RESOURCE_MANAGER_PUBLIC_KEY
#       STORAGE_BACKEND_LOCAL_ENABLED: "true"
#     volumes:
#     - ./services/storage/data:/data
#     ports:
#     - 9000
#     restart: on-failure
#     labels:
#       traefik.enable: "true"
#       traefik.frontend.rule: PathPrefix:/api/storage

#   ui:
#     image: ${DOCKER_REPOSITORY}renga-ui:$PLATFORM_VERSION
#     ports:
#       - 5000
#     environment:
#       API_ROOT_URL: http://reverse-proxy/api/
#       APPLICATION_ROOT: /ui
#       KEYCLOAK_REDIRECT_URL: ${RENGA_ENDPOINT}/auth/realms/Renga/  # from outside
#       KEYCLOAK_URL: http://reverse-proxy/auth/realms/Renga/  # from inside
#     labels:
#       traefik.enable: "true"
#       traefik.frontend.rule: PathPrefix:/ui

  reverse-proxy:
    image: traefik
    command: --web --web.address=:81 \
      --docker --docker.watch --docker.domain=${PLATFORM_DOMAIN} \
      --debug --logLevel=DEBUG \
      --defaultentrypoints=http,https \
      --entrypoints='Name:http Address::80' \
      --entrypoints='Name:https Address::443 TLS:/ssl/test.crt,/ssl/test.key' \
      --docker.exposedbydefault=false
    # FIXME usage of self signed certs --entrypoints='Name:http Address::80 Redirect.EntryPoint:https' \
    ports:
      - 80:80
      - 443:443
      - 8080:8080
      - 81:81
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /dev/null:/traefik.toml
      - ./services/traefik/ssl/:/ssl/
    networks:
      - default
      - review

networks:
  review:
    external: true
